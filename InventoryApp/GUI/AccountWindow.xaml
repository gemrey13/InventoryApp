<Window
    x:Class="InventoryApp.GUI.AccountWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:InventoryApp.GUI"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Title="Account History"
    Width="1200"
    Height="900"
    AllowsTransparency="True"
    Background="Transparent"
    WindowStartupLocation="CenterScreen"
    WindowStyle="None"
    mc:Ignorable="d">
    <Window.Resources>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3" />
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA" />
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5" />
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="AllowDrop" Value="true" />
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="10"
                            SnapsToDevicePixels="True">
                            <ScrollViewer
                                x:Name="PART_ContentHost"
                                Focusable="false"
                                HorizontalScrollBarVisibility="Hidden"
                                VerticalScrollBarVisibility="Hidden" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="border" Property="Opacity" Value="0.56" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TextBox.MouseOver.Border}" />
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TextBox.Focus.Border}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                        <Condition Property="IsSelectionActive" Value="false" />
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle
                            Margin="2"
                            SnapsToDevicePixels="true"
                            Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                            StrokeDashArray="1 2"
                            StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD" />
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070" />
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD" />
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1" />
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6" />
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B" />
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4" />
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5" />
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383" />
        <Style TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="50"
                            SnapsToDevicePixels="true">
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.MouseOver.Background}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.MouseOver.Border}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Pressed.Background}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Pressed.Border}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Disabled.Background}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Disabled.Border}" />
                                <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource Button.Disabled.Foreground}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="#ff2c3e50" />
            <Setter Property="Height" Value="40" />
            <Setter Property="FontSize" Value="18" />
            <Setter Property="FontFamily" Value="Segoe UI" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Foreground" Value="White" />
        </Style>
    </Window.Resources>
    <Border BorderThickness="5" CornerRadius="30">
        <Border.Background>
            <LinearGradientBrush>
                <GradientStop Offset="0.75" Color="white" />
                <GradientStop Offset=".15" Color="#2f6deb" />
            </LinearGradientBrush>
        </Border.Background>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="900" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="250" />
                <RowDefinition Height="100" />
                <RowDefinition Height="400" />
                <RowDefinition Height="130" />
            </Grid.RowDefinitions>
            <Border
                x:Name="blueBorder"
                Grid.Row="0"
                Grid.RowSpan="2"
                Margin="10,25,30,15"
                CornerRadius="30">
                <Border.Background>
                    <LinearGradientBrush>
                        <GradientStop Offset="0.15" Color="white" />
                        <GradientStop Offset=".95" Color="#2f6deb" />
                    </LinearGradientBrush>
                </Border.Background>
            </Border>

            <TextBlock
                x:Name="txtUsername"
                Width="229"
                Margin="0,57,588,143"
                HorizontalAlignment="Right"
                FontFamily="Segoe UI Light"
                FontSize="30"
                Text="Username" />

            <TextBlock
                Margin="0,152,702,68"
                HorizontalAlignment="Right"
                FontFamily="Segoe UI Light"
                FontSize="20"
                Text="Old Password" />
            <TextBox
                x:Name="txtOldPassword"
                Height="35"
                Margin="83,182,560,32"
                FontSize="25"
                FontWeight="Bold"
                Text="{Binding ElementName=itemsList, Path=SelectedItem.name, Mode=OneWay}" />

            <TextBlock
                Margin="0,42,273,178"
                HorizontalAlignment="Right"
                FontFamily="Segoe UI Light"
                FontSize="20"
                Text="New Password" />
            <TextBox
                x:Name="txtNewPassword"
                Height="35"
                Margin="506,72,138,143"
                FontSize="25"
                FontWeight="Bold"
                Text="{Binding ElementName=itemsList, Path=SelectedItem.brand, Mode=OneWay}" />

            <TextBlock
                Margin="0,150,244,70"
                HorizontalAlignment="Right"
                FontFamily="Segoe UI Light"
                FontSize="20"
                Text="Confirm Password" />
            <TextBox
                x:Name="txtConfirmPassword"
                Height="35"
                Margin="506,182,137,32"
                FontSize="25"
                FontWeight="Bold"
                PreviewTextInput="intCost_PreviewTextInput"
                Text="{Binding ElementName=itemsList, Path=SelectedItem.cost, Mode=OneWay}" />
            <Button
                Grid.Row="1"
                Margin="317,10,383,50"
                Content="Change Password"
                Cursor="Hand">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="#007ACC" />
                        <Setter Property="Foreground" Value="White" />
                        <Setter Property="FontWeight" Value="Bold" />
                        <Setter Property="FontSize" Value="16" />
                        <Setter Property="Padding" Value="10" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="BorderBrush" Value="{x:Null}" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border Background="{TemplateBinding Background}" CornerRadius="5">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#005C99" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>


            <!--  Add filter controls  -->
            <Button
                x:Name="btnExit"
                Grid.Row="3"
                Grid.Column="1"
                Width="80"
                Height="80"
                Margin="123,25,87,25"
                Background="Transparent"
                BorderBrush="#2f6deb"
                BorderThickness="5"
                Click="btnExit_Click"
                Cursor="Hand">
                <Image
                    Width="50"
                    Height="50"
                    Source="../images/exit.png" />
            </Button>
            <TextBlock
                Grid.Row="3"
                Grid.Column="1"
                Margin="141,105,0,0"
                HorizontalAlignment="Left"
                Text="Go back" />
            <DataGrid
                x:Name="accountHistoryList"
                Grid.Row="2"
                Grid.ColumnSpan="2"
                Margin="20,32,20,0"
                AutoGenerateColumns="False"
                BorderBrush="#2f6deb"
                BorderThickness="3"
                CanUserReorderColumns="False"
                CanUserResizeColumns="True"
                CanUserSortColumns="True"
                ColumnWidth="Auto"
                FontSize="20"
                FontWeight="DemiBold"
                GridLinesVisibility="All"
                HeadersVisibility="All"
                HorizontalGridLinesBrush="Gray"
                IsReadOnly="True"
                ItemsSource="{Binding}"
                VerticalGridLinesBrush="Gray">

                <DataGrid.Columns>
                    <DataGridTextColumn
                        Width="60"
                        Binding="{Binding id}"
                        Header="ID" />
                    <DataGridTextColumn
                        Width="*"
                        Binding="{Binding action}"
                        Header="Action" />
                    <DataGridTextColumn
                        Width="*"
                        Binding="{Binding actionDate}"
                        Header="Date" />
                </DataGrid.Columns>

            </DataGrid>

            <TextBlock
                Grid.Column="1"
                Height="35"
                Margin="0,-200,0,0"
                HorizontalAlignment="Center"
                FontSize="25"
                Text="Item Management" />
            <Image
                Grid.RowSpan="2"
                Grid.Column="1"
                Width="300"
                Height="350"
                Margin="0,50,0,0"
                Source="../images/inventory.png" />
        </Grid>
    </Border>
</Window>
